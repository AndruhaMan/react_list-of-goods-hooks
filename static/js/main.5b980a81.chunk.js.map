{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","Default","sortingField","setSortingField","isReversed","changeSortingOrder","sortedGoods","goods","sort","good1","good2","Name","localeCompare","Length","length","reverse","sortGoods","className","type","cn","onClick","currentOrder","hidden","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAKKA,E,oFAAAA,K,YAAAA,E,gBAAAA,E,YAAAA,M,KAME,IAAMC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA0BWC,EAAgB,WAC3B,MAAwCC,mBAASH,EAASI,SAA1D,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAyCH,oBAAS,GAAlD,mBAAOI,EAAP,KAAmBC,EAAnB,KAKMC,EA9BU,SAChBC,EACAL,EACAE,GAEA,IAAME,EAAc,YAAIC,GAAOC,MAAK,SAACC,EAAOC,GAC1C,OAAQR,GACN,KAAKL,EAASc,KACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKb,EAASgB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAIb,OAAOV,EACHE,EAAYS,UACZT,EAUgBU,CAAUlB,EAAiBI,EAAcE,GAE7D,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYjB,IAAiBL,EAASc,OAE1CS,QAAS,kBAAMjB,EAAgBN,EAASc,OAP1C,iCAYA,wBACEO,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYjB,IAAiBL,EAASgB,SAE1CO,QAAS,kBAAMjB,EAAgBN,EAASgB,SAP1C,4BAYA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAA2B,IAAff,IAEhBgB,QAAS,kBAtCff,GAAmB,SAAAgB,GAAY,OAAKA,MA+BhC,qBAYA,wBACEH,KAAK,SACLD,UAAWE,IACT,SACA,YACA,WACA,CACEG,OAASpB,IAAiBL,EAASI,UACd,IAAfG,IAGVgB,QAAS,WACPjB,EAAgBN,EAASI,SACzBI,GAAmB,IAbvB,sBAoBF,6BACGC,EAAYiB,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YClHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5b980a81.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nenum SortType {\n  Name = 'name',\n  Length = 'length',\n  Default = '',\n}\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst sortGoods = (\n  goods: string[],\n  sortingField: SortType,\n  isReversed: boolean,\n) => {\n  const sortedGoods = [...goods].sort((good1, good2) => {\n    switch (sortingField) {\n      case SortType.Name:\n        return good1.localeCompare(good2);\n\n      case SortType.Length:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  return isReversed\n    ? sortedGoods.reverse()\n    : sortedGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortingField, setSortingField] = useState(SortType.Default);\n  const [isReversed, changeSortingOrder] = useState(false);\n\n  const toggleSortingOrder = () => (\n    changeSortingOrder(currentOrder => !currentOrder)\n  );\n  const sortedGoods = sortGoods(goodsFromServer, sortingField, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortingField !== SortType.Name },\n          )}\n          onClick={() => setSortingField(SortType.Name)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortingField !== SortType.Length },\n          )}\n          onClick={() => setSortingField(SortType.Length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': isReversed !== true },\n          )}\n          onClick={() => toggleSortingOrder()}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-danger',\n            'is-light',\n            {\n              hidden: (sortingField === SortType.Default)\n                && (isReversed === false),\n            },\n          )}\n          onClick={() => {\n            setSortingField(SortType.Default);\n            changeSortingOrder(false);\n          }}\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}